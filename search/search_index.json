{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"MkDocs Project documentation with Markdown Overview MkDocs is a fast, simple and downright gorgeous static site generator that's geared towards building project documentation. Documentation source files are written in Markdown, and configured with a single YAML configuration file. MkDocs is currently still in development. We're progressing quickly, but the documentation still needs filling in, and there are a few rough edges. The 1.0 release is planned to arrive in the next few months. Host Anywhere Builds completely static HTML sites that you can host on GitHub pages, Amazon S3, or anywhere else you choose. Great themes available There's a stack of good looking themes included by default. Choose from bootstrap, readthedocs, or any of the 12 bootswatch themes. Preview your site as you work The built-in devserver allows you to preview your documentation as you're writing it. It will even auto-reload whenever you save any changes, so all you need to do to see your latest edits is refresh your browser. Easy to customize Get your project documentation looking just the way you want it by customizing the theme. Installation In order to install MkDocs you'll need Python installed on your system, as well as the Python package manager, pip. You can check if you have these already installed like so: $ python --version Python 2.7.2 $ pip --version pip 1.5.2 Getting started Getting started is super easy. Adding pages Go ahead and edit the doc/index.md document, and change the initial heading to MkLorum, then reload the site in your browser, and you should see the change take effect immediately. Let's also add a second page to our documentation: $ curl 'jaspervdj.be/lorem-markdownum/markdown.txt' > docs/about.md Theming our documentation While we're here can also change the configuration file to alter how the documentation is displayed. Let's go ahead and change the theme. Edit the mkdocs.yml file to the following: site_name: MkLorum pages: - Home: index.md - About: about.md theme: readthedocs Building the site That's looking good. We're ready to deploy the first pass of our MkLorum documentation now. Let's build the documentation. $ mkdocs build Deploying The documentation site that we've just built only uses static files so you'll be able to host it from pretty much anywhere. GitHub project pages and Amazon S3 are good hosting options. Upload the contents of the entire site directory to wherever you're hosting your website from and you're done. For specific instructions for a number of common hosts, see the Deploying your Docs page. Getting help To get help with MkDocs, please use the discussion group, GitHub issues or the MkDocs IRC channel #mkdocs on freenode.","title":"Home"},{"location":"#mkdocs","text":"Project documentation with Markdown","title":"MkDocs"},{"location":"#overview","text":"MkDocs is a fast, simple and downright gorgeous static site generator that's geared towards building project documentation. Documentation source files are written in Markdown, and configured with a single YAML configuration file. MkDocs is currently still in development. We're progressing quickly, but the documentation still needs filling in, and there are a few rough edges. The 1.0 release is planned to arrive in the next few months.","title":"Overview"},{"location":"#installation","text":"In order to install MkDocs you'll need Python installed on your system, as well as the Python package manager, pip. You can check if you have these already installed like so: $ python --version Python 2.7.2 $ pip --version pip 1.5.2","title":"Installation"},{"location":"#getting-started","text":"Getting started is super easy.","title":"Getting started"},{"location":"#adding-pages","text":"Go ahead and edit the doc/index.md document, and change the initial heading to MkLorum, then reload the site in your browser, and you should see the change take effect immediately. Let's also add a second page to our documentation: $ curl 'jaspervdj.be/lorem-markdownum/markdown.txt' > docs/about.md","title":"Adding pages"},{"location":"#theming-our-documentation","text":"While we're here can also change the configuration file to alter how the documentation is displayed. Let's go ahead and change the theme. Edit the mkdocs.yml file to the following: site_name: MkLorum pages: - Home: index.md - About: about.md theme: readthedocs","title":"Theming our documentation"},{"location":"#building-the-site","text":"That's looking good. We're ready to deploy the first pass of our MkLorum documentation now. Let's build the documentation. $ mkdocs build","title":"Building the site"},{"location":"#deploying","text":"The documentation site that we've just built only uses static files so you'll be able to host it from pretty much anywhere. GitHub project pages and Amazon S3 are good hosting options. Upload the contents of the entire site directory to wherever you're hosting your website from and you're done. For specific instructions for a number of common hosts, see the Deploying your Docs page.","title":"Deploying"},{"location":"#getting-help","text":"To get help with MkDocs, please use the discussion group, GitHub issues or the MkDocs IRC channel #mkdocs on freenode.","title":"Getting help"},{"location":"api-reference/","text":"API reference","title":"API Reference"},{"location":"choosing-your-docs/","text":"","title":"Choosing your docs"},{"location":"choosing-your-theme/","text":"Choosing your Theme MkDocs includes two built-in themes (mkdocs and readthedocs), as documented below. However, many third party themes are available to choose from as well. To choose a theme, set the theme configuration option in your mkdocs.yml config file. theme: name: readthedocs","title":"Choosing Your Theme"},{"location":"command-line-interface/","text":"Command Line Interface","title":"Command Line Interface"},{"location":"configuration/","text":"Configuration Introduction Project settings are configured by default using a YAML configuration file in the project directory named mkdocs.yml. You can specify another path for it by using the -f/--config-file option (see mkdocs build --help). Project information site_name This is a required setting, and should be a string that is used as the main title for the project documentation. For example: site_name: Marshmallow Generator","title":"Configuration"},{"location":"configuration/#introduction","text":"Project settings are configured by default using a YAML configuration file in the project directory named mkdocs.yml. You can specify another path for it by using the -f/--config-file option (see mkdocs build --help).","title":"Introduction"},{"location":"configuration/#project-information","text":"site_name This is a required setting, and should be a string that is used as the main title for the project documentation. For example: site_name: Marshmallow Generator","title":"Project information"},{"location":"contribution/","text":"Contributing to MkDocs The MkDocs project welcomes, and depends, on contributions from developers and users in the open source community. Contributions can be made in a number of ways, a few examples are: - Code patches via pull requests - Documentation improvements - Bug reports and patch reviews","title":"Contributing"},{"location":"customizing-your-theme/","text":"Customizing Your Theme If you would like to make a few tweaks to an existing theme, there is no need to create your own theme from scratch. For minor tweaks which only require some CSS and/or JavaScript, you can use the docs_dir. However, for more complex customizations, including overriding templates, you will need to use the theme custom_dir setting. Using the docs_dir The extra_css and extra_javascript configuration options can be used to make tweaks and customizations to existing themes. To use these, you simply need to include either CSS or JavaScript files within your documentation directory. For example, to change the color of the headers in your documentation, create a file called extra.css and place it next to the documentation Markdown. In that file add the following CSS.","title":"Customizing Your Theme"},{"location":"deploying-your-docs/","text":"Deploying your docs A basic guide to deploying your docs to various hosting providers GitHub Pages If you host the source code for a project on GitHub, you can easily use GitHub Pages to host the documentation for your project. After you checkout the primary working branch (usually master) of the git repository where you maintain the source documentation for your project, run the following command: mkdocs gh-deploy --clean That's it! Behind the scenes, MkDocs will build your docs and use the ghp-import tool to commit them to the gh-pages branch and push the gh-pages branch to GitHub. Use mkdocs gh-deploy --help to get a full list of options available for the gh-deploy command. Be aware that you will not be able to review the built site before it is pushed to GitHub. Therefore, you may want to verify any changes you make to the docs beforehand by using the build or serve commands and reviewing the built files locally.","title":"Deploying Your Docs"},{"location":"deploying-your-docs/#github-pages","text":"If you host the source code for a project on GitHub, you can easily use GitHub Pages to host the documentation for your project. After you checkout the primary working branch (usually master) of the git repository where you maintain the source documentation for your project, run the following command: mkdocs gh-deploy --clean That's it! Behind the scenes, MkDocs will build your docs and use the ghp-import tool to commit them to the gh-pages branch and push the gh-pages branch to GitHub. Use mkdocs gh-deploy --help to get a full list of options available for the gh-deploy command. Be aware that you will not be able to review the built site before it is pushed to GitHub. Therefore, you may want to verify any changes you make to the docs beforehand by using the build or serve commands and reviewing the built files locally.","title":"GitHub Pages"},{"location":"developer-guide/","text":"","title":"Developer guide"},{"location":"developerGuide/","text":"","title":"developerGuide"},{"location":"gettingStarted/","text":"","title":"Getting Started"},{"location":"installation/","text":"MkDocs Installation Requirements MkDocs requires a recent version of Python and the Python package manager, pip, to be installed on your system. You can check if you already have these installed from the command line: $ python --version Python 3.8.2 $ pip --version pip 20.0.2 from /usr/local/lib/python3.8/site-packages/pip (python 3.8) If you already have those packages installed, you may skip down to Installing MkDocs. Installing Python Installing Python Note If you are installing Python on Windows, be sure to check the box to have Python added to your PATH if the installer offers such an option (it's normally off by default).","title":"Installation"},{"location":"installation/#requirements","text":"MkDocs requires a recent version of Python and the Python package manager, pip, to be installed on your system. You can check if you already have these installed from the command line: $ python --version Python 3.8.2 $ pip --version pip 20.0.2 from /usr/local/lib/python3.8/site-packages/pip (python 3.8) If you already have those packages installed, you may skip down to Installing MkDocs.","title":"Requirements"},{"location":"installation/#installing-python","text":"","title":"Installing Python"},{"location":"licence/","text":"License MkDocs License (BSD) Copyright \u00a9 2014, Tom Christie. All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","title":"License"},{"location":"licence/#mkdocs-license-bsd","text":"Copyright \u00a9 2014, Tom Christie. All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","title":"MkDocs License (BSD)"},{"location":"localizing-your-theme/","text":"Localizing Your Theme Installation For theme localization to work, you must use a theme which supports it and enable i18n (internationalization) support by installing mkdocs[i18n]: pip install mkdocs[i18n] Supported locales In most cases a locale is designated by the ISO-639-1 (2-letter) abbreviation for your language. However, a locale may also include a territory (or region or county) code as well. The language and territory must be separated by an underscore. For example, some possible locales for English might include en, en_AU, en_GB, and en_US. For a list of locales supported by the theme you are using, see that theme's documentation. mkdocs readthedocs","title":"Localizing Your Theme"},{"location":"localizing-your-theme/#installation","text":"For theme localization to work, you must use a theme which supports it and enable i18n (internationalization) support by installing mkdocs[i18n]: pip install mkdocs[i18n]","title":"Installation"},{"location":"localizing-your-theme/#supported-locales","text":"In most cases a locale is designated by the ISO-639-1 (2-letter) abbreviation for your language. However, a locale may also include a territory (or region or county) code as well. The language and territory must be separated by an underscore. For example, some possible locales for English might include en, en_AU, en_GB, and en_US. For a list of locales supported by the theme you are using, see that theme's documentation. mkdocs readthedocs","title":"Supported locales"},{"location":"pluggings/","text":"MkDocs Plugins Installing Plugins Before a plugin can be used, it must be installed on the system. If you are using a plugin which comes with MkDocs, then it was installed when you installed MkDocs. However, to install third party plugins, you need to determine the appropriate package name and install it using pip: pip install mkdocs-foo-plugin Once a plugin has been successfully installed, it is ready to use. It just needs to be enabled in the configuration file. The Best-of-MkDocs page has a large list of plugins that you can install and use. Using Plugins The plugins configuration option should contain a list of plugins to use when building the site. Each \"plugin\" must be a string name assigned to the plugin (see the documentation for a given plugin to determine its \"name\"). A plugin listed here must already be installed. plugins: - search","title":"Pluggings"},{"location":"pluggings/#installing-plugins","text":"Before a plugin can be used, it must be installed on the system. If you are using a plugin which comes with MkDocs, then it was installed when you installed MkDocs. However, to install third party plugins, you need to determine the appropriate package name and install it using pip: pip install mkdocs-foo-plugin Once a plugin has been successfully installed, it is ready to use. It just needs to be enabled in the configuration file. The Best-of-MkDocs page has a large list of plugins that you can install and use.","title":"Installing Plugins"},{"location":"pluggings/#using-plugins","text":"The plugins configuration option should contain a list of plugins to use when building the site. Each \"plugin\" must be a string name assigned to the plugin (see the documentation for a given plugin to determine its \"name\"). A plugin listed here must already be installed. plugins: - search","title":"Using Plugins"},{"location":"release-note/","text":"Release Notes Upgrading To upgrade MkDocs to the latest version, use pip: pip install -U mkdocs You can determine your currently installed version using mkdocs --version: $ mkdocs --version mkdocs, version 1.0 from /path/to/mkdocs (Python 3.6)","title":"Release Note"},{"location":"release-note/#upgrading","text":"To upgrade MkDocs to the latest version, use pip: pip install -U mkdocs You can determine your currently installed version using mkdocs --version: $ mkdocs --version mkdocs, version 1.0 from /path/to/mkdocs (Python 3.6)","title":"Upgrading"},{"location":"themes/","text":"Developing Themes When creating a new theme, you can either follow the steps in this guide to create one from scratch or you can download the mkdocs-basic-theme as a basic, yet complete, theme with all the boilerplate required. You can find this base theme on GitHub. It contains detailed comments in the code to describe the different features and their usage. Creating a custom theme The bare minimum required for a custom theme is a main.html Jinja2 template file which is placed in a directory that is not a child of the docs_dir. Within mkdocs.yml, set the theme.custom_dir option to the path of the directory containing main.html. The path should be relative to the configuration file. For example, given this example project layout: mkdocs.yml docs/ index.md about.md custom_theme/ main.html ... ... you would include the following settings in mkdocs.yml to use the custom theme directory: theme: name: null custom_dir: 'custom_theme/'","title":"Themes"},{"location":"themes/#creating-a-custom-theme","text":"The bare minimum required for a custom theme is a main.html Jinja2 template file which is placed in a directory that is not a child of the docs_dir. Within mkdocs.yml, set the theme.custom_dir option to the path of the directory containing main.html. The path should be relative to the configuration file. For example, given this example project layout: mkdocs.yml docs/ index.md about.md custom_theme/ main.html ... ... you would include the following settings in mkdocs.yml to use the custom theme directory: theme: name: null custom_dir: 'custom_theme/'","title":"Creating a custom theme"},{"location":"translations/","text":"Translations The built-in themes that are included with MkDocs provide support for translations. This is a guide for translators, which documents the process for contributing new translations and/or updating existing translations. For guidance on modifying the existing themes, see the Contributing Guide. To enable a specific translation see the documentation about the specific theme you are using in the User Guide. For translations of third-party themes, please see the documentation for those themes. For a third-party theme to make use of MkDocs' translation tools and methods, that theme must be properly configured to make use of those tools. Localization tooling prerequisites Theme localization makes use of the babel project for generation and compilation of localization files. You will need to be working from the git working tree on your local machine to make use of the translation commands. See the Contributing Guide for direction on how to Install for Development and Submit a Pull Request. The instructions in this document assume that you are working from a properly configured development environment. Make sure translation requirements are installed in your environment: pip install mkdocs[i18n] Adding language translations to themes","title":"Translations"},{"location":"translations/#localization-tooling-prerequisites","text":"Theme localization makes use of the babel project for generation and compilation of localization files. You will need to be working from the git working tree on your local machine to make use of the translation commands. See the Contributing Guide for direction on how to Install for Development and Submit a Pull Request. The instructions in this document assume that you are working from a properly configured development environment. Make sure translation requirements are installed in your environment: pip install mkdocs[i18n]","title":"Localization tooling prerequisites"},{"location":"translations/#adding-language-translations-to-themes","text":"","title":"Adding language translations to themes"},{"location":"userGuide/","text":"Requirements MkDocs requires a recent version of Python and the Python package manager, pip, to be installed on your system. You can check if you already have these installed from the command line: $ python --version Python 3.8.2 $ pip --version pip 20.0.2 from /usr/local/lib/python3.8/site-packages/pip (python 3.8) Installing Python Install Python using your package manager of choice, or by downloading an installer appropriate for your system from python.org and running it. Installing pip If you're using a recent version of Python, the Python package manager, pip, is most likely installed by default. However, you may need to upgrade pip to the lasted version: pip install --upgrade pip If you need to install pip for the first time, download get-pip.py. Then run the following command to install it: python get-pip.py","title":"userGuide"},{"location":"userGuide/#requirements","text":"MkDocs requires a recent version of Python and the Python package manager, pip, to be installed on your system. You can check if you already have these installed from the command line: $ python --version Python 3.8.2 $ pip --version pip 20.0.2 from /usr/local/lib/python3.8/site-packages/pip (python 3.8)","title":"Requirements"},{"location":"userGuide/#installing-python","text":"Install Python using your package manager of choice, or by downloading an installer appropriate for your system from python.org and running it.","title":"Installing Python"},{"location":"userGuide/#installing-pip","text":"If you're using a recent version of Python, the Python package manager, pip, is most likely installed by default. However, you may need to upgrade pip to the lasted version: pip install --upgrade pip If you need to install pip for the first time, download get-pip.py. Then run the following command to install it: python get-pip.py","title":"Installing pip"},{"location":"writing-your-docs/","text":"Writing your docs File layout Your documentation source should be written as regular Markdown files (see Writing with Markdown below), and placed in the documentation directory. By default, this directory will be named docs and will exist at the top level of your project, alongside the mkdocs.yml configuration file. The simplest project you can create will look something like this: mkdocs.yml docs/ index.md By convention your project homepage should be named index.md (see Index pages below for details). Any of the following file extensions may be used for your Markdown source files: markdown, mdown, mkdn, mkd, md. All Markdown files included in your documentation directory will be rendered in the built site regardless of any settings.","title":"Writing Your Docs"}]}